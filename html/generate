#!/bin/bash

print_help () {
    echo "Usage: $0 [-s|--standalone]"
    echo "    -s|--stanalone -> Put pandoc HTML wrapper around the content."
    echo "    -v|--version -> Put the output files under defined folder name."
    exit 1
}

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
input_dir=${script_dir}/../user_technical
standalone=0
version="v0.13.0"

while [[ $# > 0 ]]; do
    key="$1"
    case $key in
        -s|--standalone)
        standalone=1
        shift
        ;;
        -v|--version)
        shift
        version=$1
        shift
        ;;
        -h|--help|help)
        print_help
        shift
        ;;
    esac
done

output_dir=${script_dir}/../output/html/${version}

add_link_info () {
    local resource_dir=$(dirname $1)
    if [[ ${resource_dir} == "." ]]; then
        resource_dir=""
    else
        resource_dir="${resource_dir}/"
    fi
    (( $standalone )) && \
    echo "--metadata=link_suffix:'' --metadata=html_link_prefix:'.html'" || \
    echo "--metadata=link_suffix:'/docs/${version}/${resource_dir}' --metadata=html_link_prefix:''"
}

dump_html () {
    local src_filename=$1
    local dst_filename=$2
    pandoc ${input_dir}/${src_filename} \
        --from markdown --to html \
        --output ${output_dir}/${dst_filename} \
        --filter ${script_dir}/links_filter.py \
        $(add_link_info ${dst_filename}) || exit 1
}

rm -rf ${output_dir}
mkdir -p ${output_dir}

cd ${script_dir}
source ve3/bin/activate || exit 1

mkdir -p ${output_dir}/concepts
mkdir -p ${output_dir}/how_to_guides
mkdir -p ${output_dir}/reference_guide
mkdir -p ${output_dir}/tutorials
mkdir -p ${output_dir}/data

cp -r ${input_dir}/data/* ${output_dir}/data/

dump_html "README.md" "index.html"
dump_html "CHANGELOG.md" "changelog.html"
dump_html "faq.md" "faq.html"
dump_html "quick-start.md" "quick-start.html"
dump_html "upcoming-features.md" "upcoming-features.html"

for dir in $(find ${input_dir}/* -maxdepth 1 -type d); do
    for file in "$dir"/*; do
        rel_path=$(realpath --relative-to=${input_dir} ${dir})
        if [[ "${rel_path}" == "data" ]]; then
            continue
        fi
        basename=$(basename ${file%.*})
        dump_html "${rel_path}/${basename}.md" "${rel_path}/${basename}.html"
    done
done

deactivate

echo "Output Diractory: $output_dir"
